import numpy as np
from gnuradio import gr
import json
import requests
from datetime import datetime

class blk(gr.sync_block):  # Heredando de gr.sync_block
    def __init__(self, url_google_sheet='https://docs.google.com/spreadsheets/d/1aZ02Lg-YHxfcpkfMDu17bzfcCieAcYIJqJRguP8pZGM', 
                 latitud=7.141879, longitud=-73.122193, N=8, 
                 finicial=1417000000, fpaso=1421000000, salto=40000):
        gr.sync_block.__init__(self,
            name="Enviar a Google Sheet",
            in_sig=[(np.float32, N)],  # Recibe un vector de tamaño N
            out_sig=None)  # No tiene salida porque estamos haciendo un envío a un servicio web
        
        # URL del servicio web de Google Apps Script
        self.url_web_service = 'https://script.google.com/macros/s/AKfycbz7NCKBvRCvhQkuAjcaQUoxhpRQOD_4zOxplrXNP1s2fuiuB-CmPATKADO6ijK__Evm/exec'
        
        # Parámetros externos con valores por defecto
        self.url_google_sheet = url_google_sheet  # URL de la Google Sheet
        self.latitud = latitud  # Coordenada latitudinal
        self.longitud = longitud  # Coordenada longitudinal
        self.N = N  # Tamaño del vector N (parámetro externo)
        self.finicial = finicial  # Frecuencia inicial
        self.fpaso = fpaso  # Paso de frecuencia
        self.salto = salto  # Número de entradas antes de registrar
        self.contador_entradas = 0  # Contador de entradas
        
        # Para controlar el número de entradas procesadas
        self.entradas_procesadas = 0  # Inicializa el contador

    def registrarDatos(self, data):
        """
        Función separada que organiza el JSON y realiza el envío de los datos.
        """
        # Convertir el array de datos a una cadena separada por comas
        data_str = ','.join([str(d) for d in data])
        
        # Obtener la fecha y hora actuales
        fecha_actual = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        # Crear el objeto JSON para el web service
        json_data = {
            "ordentipo": "crear",
            "url": self.url_google_sheet,  # URL de la Google Sheet
            "numeroHoja": 0,
            "filaencabezados": 1,
            "columnaId": 1,
            "datos": json.dumps([  # Envolviendo en json.dumps para convertirlo en una cadena JSON válida
                fecha_actual,
                self.latitud,  # Coordenada latitud
                self.longitud,  # Coordenada longitud
                "eduradio",
                self.N,  # Tamaño del vector N
                data_str,
                self.finicial,  # Frecuencia inicial
                self.fpaso  # Paso de frecuencia
            ])
        }
        
        # Enviar el JSON como solicitud POST al servicio web
        try:
            response = requests.post(self.url_web_service, json=json_data)
            response.raise_for_status()
            print(f"Datos enviados exitosamente: {response.text}")
        except requests.exceptions.RequestException as e:
            print(f"Error enviando datos: {e}")

    def work(self, input_items, output_items):
        # Incrementar el contador de entradas procesadas
        self.entradas_procesadas += len(input_items[0])
        
        # Comprobar si se han procesado suficientes entradas (igual a "salto")
        if self.entradas_procesadas >= self.salto:
            # Restablecer el contador de entradas
            self.entradas_procesadas = 0
            
            # Recibir los datos de entrada
            data = input_items[0][0]  # Los datos recibidos son un array de tamaño N
            
            # Llamar a la función que organiza y envía el JSON
            self.registrarDatos(data)
        
        return len(input_items[0])  # Indica que se procesaron todas las muestras de entrada
