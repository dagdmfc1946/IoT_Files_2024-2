# -*- coding: utf-8 -*-
"""taller3_receptor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WZIHWTLVogG_wPKXg-eX_i4_Bp3eLN1n

# Cliente MQTT
Este código representa a un cliente MQTT, es decir, que puede suscribirse a tópicos de Broker MQTT.

##1. Instalación de recursos a nivel de Sistema Operativo
Si tratabaja en Linux, debes previamente instalar allí la libreria que permite que este código maneje el protocolo MQTT. En GoogleColab tambien se puede hacer así:
"""

#!pip install paho-mqtt # Install the paho-mqtt package

"""##2. Importaciones y variables globales"""

import paho.mqtt.client as mqtt

"""## 3. Definción de los callbacks
Los callbacks son funciones que se ejecutan cuando ocurre un cierto evento. Imagina que es una secretaria que se queda pendiente del teléfono, pero solo para atender un servidio de un agente, en este caso paho-mqtt.
* **on_connect:** es el callback encargado de detectar en qué comento se la la conexión con el broker MQTT. En otras palabras, esta función arranca tan pronto ocurre ese evento. Entonces tu como desarrollador puedes indicar allí, lo que hay que hacer cuando se da este evento. Para ello dispones de las variables: client, userdata, flags, rc
*   **on_message:** Es el callback encargado de detectar en qué comento llega un mensaje. En otras palabras, esta función arranca tan pronto ocurre ese evento. Entonces tu como desarrollador puedes indicar allí, lo que hay que hacer cuando se da este evento.
"""

def mi_callback_de_conexion(client, userdata, flags, rc):
  if rc == 0:
    print("Conectado al broker MQTT")  # Mensaje de conexión exitosa
    client.subscribe("MFCtopic")       # Suscribirse al tópico especificado
  else:
    print("Error de conexión:", rc)    # Mensaje de error de conexión

def mi_callback_de_mensajes(client, userdata, msg):
  print("Mensaje recibido:", msg.topic, msg.payload.decode())

"""# Receptor Mensaje
Arriba solo se realizaron definiciones de los callbacks. Es aquí donde realmente se pone todo en funcionamiento. Primero que todo informamos a paho-mqtt cuales son nuestros callbacks. Luego sí que nos conectamos como cliente al broker
"""

miCliente = mqtt.Client()
miCliente.on_connect = mi_callback_de_conexion
miCliente.on_message = mi_callback_de_mensajes

miCliente.connect("172.171.224.96", 1883) # Se debe especificar la IP de la VM

"""#Poner en loop al cliente para que se quede siempre escuchando"""

miCliente.loop_forever()
